// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ordem_Servico.Infra.Migrations
{
    [DbContext(typeof(OrdemServicoContext))]
    [Migration("20240121222848_OneToManyMigration")]
    partial class OneToManyMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Ordem_Servico.Domain.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrdemServicoID")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClienteID");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Finalizacao", b =>
                {
                    b.Property<int>("FinalizacaoID")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataFinalizacao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("FinalizacaoID");

                    b.ToTable("Finalizacao", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.OrdemServico", b =>
                {
                    b.Property<int>("OrdemServicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FormaPagamento")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Prazo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<int>("TecnicoID")
                        .HasColumnType("int");

                    b.HasKey("OrdemServicoID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("TecnicoID");

                    b.ToTable("OrdemServico", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Tecnico", b =>
                {
                    b.Property<int>("TecnicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrdemServicoID")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TecnicoID");

                    b.ToTable("Tecnico", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Finalizacao", b =>
                {
                    b.HasOne("Ordem_Servico.Domain.OrdemServico", "OrdemServico")
                        .WithOne("Finalizacao")
                        .HasForeignKey("Ordem_Servico.Domain.Finalizacao", "FinalizacaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("Ordem_Servico.Domain.OrdemServico", b =>
                {
                    b.HasOne("Ordem_Servico.Domain.Cliente", "Cliente")
                        .WithMany("OrdemServico")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ordem_Servico.Domain.Tecnico", "Tecnico")
                        .WithMany("OrdemServico")
                        .HasForeignKey("TecnicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Cliente", b =>
                {
                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("Ordem_Servico.Domain.OrdemServico", b =>
                {
                    b.Navigation("Finalizacao");
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Tecnico", b =>
                {
                    b.Navigation("OrdemServico");
                });
#pragma warning restore 612, 618
        }
    }
}
