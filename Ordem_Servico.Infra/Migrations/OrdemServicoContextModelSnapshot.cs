// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ordem_Servico.Infra.Migrations
{
    [DbContext(typeof(OrdemServicoContext))]
    partial class OrdemServicoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EquipamentoOrdemServico", b =>
                {
                    b.Property<int>("EquipamentosEquipamentoID")
                        .HasColumnType("int");

                    b.Property<int>("OrdemServicosOrdemServicoID")
                        .HasColumnType("int");

                    b.HasKey("EquipamentosEquipamentoID", "OrdemServicosOrdemServicoID");

                    b.HasIndex("OrdemServicosOrdemServicoID");

                    b.ToTable("EquipamentoOrdemServico");
                });

            modelBuilder.Entity("OcorrenciaOrdemServico", b =>
                {
                    b.Property<int>("OcorrenciasOcorrenciaID")
                        .HasColumnType("int");

                    b.Property<int>("OrdemServicosOrdemServicoID")
                        .HasColumnType("int");

                    b.HasKey("OcorrenciasOcorrenciaID", "OrdemServicosOrdemServicoID");

                    b.HasIndex("OrdemServicosOrdemServicoID");

                    b.ToTable("OcorrenciaOrdemServico");
                });

            modelBuilder.Entity("OrdemServicoPeca", b =>
                {
                    b.Property<int>("OrdemServicosOrdemServicoID")
                        .HasColumnType("int");

                    b.Property<int>("PecasPecaID")
                        .HasColumnType("int");

                    b.HasKey("OrdemServicosOrdemServicoID", "PecasPecaID");

                    b.HasIndex("PecasPecaID");

                    b.ToTable("OrdemServicoPeca");
                });

            modelBuilder.Entity("OrdemServicoServico", b =>
                {
                    b.Property<int>("OrdemServicosOrdemServicoID")
                        .HasColumnType("int");

                    b.Property<int>("ServicosServicoID")
                        .HasColumnType("int");

                    b.HasKey("OrdemServicosOrdemServicoID", "ServicosServicoID");

                    b.HasIndex("ServicosServicoID");

                    b.ToTable("OrdemServicoServico");
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrdemServicoID")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClienteID");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Equipamento", b =>
                {
                    b.Property<int>("EquipamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DadosAdicionais")
                        .HasColumnType("longtext");

                    b.Property<string>("DefeitoDeclarado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Solucao")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EquipamentoID");

                    b.ToTable("Equipamento", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Finalizacao", b =>
                {
                    b.Property<int>("FinalizacaoID")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataFinalizacao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("FinalizacaoID");

                    b.ToTable("Finalizacao", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Ocorrencia", b =>
                {
                    b.Property<int>("OcorrenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Situacao")
                        .HasColumnType("longtext");

                    b.HasKey("OcorrenciaID");

                    b.ToTable("Ocorrencia", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.OrdemServico", b =>
                {
                    b.Property<int>("OrdemServicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FormaPagamento")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Prazo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<int>("TecnicoID")
                        .HasColumnType("int");

                    b.HasKey("OrdemServicoID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("TecnicoID");

                    b.ToTable("OrdemServico", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Peca", b =>
                {
                    b.Property<int>("PecaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descrição")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("PecaID");

                    b.ToTable("Peca", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Servico", b =>
                {
                    b.Property<int>("ServicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("ServicoID");

                    b.ToTable("Servico", (string)null);
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Tecnico", b =>
                {
                    b.Property<int>("TecnicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrdemServicoID")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TecnicoID");

                    b.ToTable("Tecnico", (string)null);
                });

            modelBuilder.Entity("EquipamentoOrdemServico", b =>
                {
                    b.HasOne("Ordem_Servico.Domain.Equipamento", null)
                        .WithMany()
                        .HasForeignKey("EquipamentosEquipamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ordem_Servico.Domain.OrdemServico", null)
                        .WithMany()
                        .HasForeignKey("OrdemServicosOrdemServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OcorrenciaOrdemServico", b =>
                {
                    b.HasOne("Ordem_Servico.Domain.Ocorrencia", null)
                        .WithMany()
                        .HasForeignKey("OcorrenciasOcorrenciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ordem_Servico.Domain.OrdemServico", null)
                        .WithMany()
                        .HasForeignKey("OrdemServicosOrdemServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrdemServicoPeca", b =>
                {
                    b.HasOne("Ordem_Servico.Domain.OrdemServico", null)
                        .WithMany()
                        .HasForeignKey("OrdemServicosOrdemServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ordem_Servico.Domain.Peca", null)
                        .WithMany()
                        .HasForeignKey("PecasPecaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrdemServicoServico", b =>
                {
                    b.HasOne("Ordem_Servico.Domain.OrdemServico", null)
                        .WithMany()
                        .HasForeignKey("OrdemServicosOrdemServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ordem_Servico.Domain.Servico", null)
                        .WithMany()
                        .HasForeignKey("ServicosServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Finalizacao", b =>
                {
                    b.HasOne("Ordem_Servico.Domain.OrdemServico", "OrdemServico")
                        .WithOne("Finalizacao")
                        .HasForeignKey("Ordem_Servico.Domain.Finalizacao", "FinalizacaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("Ordem_Servico.Domain.OrdemServico", b =>
                {
                    b.HasOne("Ordem_Servico.Domain.Cliente", "Cliente")
                        .WithMany("OrdemServico")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ordem_Servico.Domain.Tecnico", "Tecnico")
                        .WithMany("OrdemServico")
                        .HasForeignKey("TecnicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Cliente", b =>
                {
                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("Ordem_Servico.Domain.OrdemServico", b =>
                {
                    b.Navigation("Finalizacao");
                });

            modelBuilder.Entity("Ordem_Servico.Domain.Tecnico", b =>
                {
                    b.Navigation("OrdemServico");
                });
#pragma warning restore 612, 618
        }
    }
}
