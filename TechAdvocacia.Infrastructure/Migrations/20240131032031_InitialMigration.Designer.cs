// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechAdvocacia.Infrastructure.Persistence;

#nullable disable

namespace TechAdvocacia.Infrastructure.Migrations
{
    [DbContext(typeof(TechAdvocaciaDbContext))]
    [Migration("20240131032031_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TechAdvocacia.Core.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("reatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("TechAdvocacia.Core.Entities.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LegalCaseId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("reatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("DocumentId");

                    b.HasIndex("LegalCaseId");

                    b.ToTable("Documents", (string)null);
                });

            modelBuilder.Entity("TechAdvocacia.Core.Entities.Lawyer", b =>
                {
                    b.Property<int>("LawyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("reatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("LawyerId");

                    b.ToTable("Lawyers", (string)null);
                });

            modelBuilder.Entity("TechAdvocacia.Core.Entities.LegalCase", b =>
                {
                    b.Property<int>("LegalCaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Closing")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LawyerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Opening")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<float>("SuccessProbability")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("reatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("LegalCaseId");

                    b.HasIndex("ClientId");

                    b.HasIndex("LawyerId");

                    b.ToTable("LegalCases", (string)null);
                });

            modelBuilder.Entity("TechAdvocacia.Core.Entities.Document", b =>
                {
                    b.HasOne("TechAdvocacia.Core.Entities.LegalCase", "LegalCase")
                        .WithMany("Documents")
                        .HasForeignKey("LegalCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalCase");
                });

            modelBuilder.Entity("TechAdvocacia.Core.Entities.LegalCase", b =>
                {
                    b.HasOne("TechAdvocacia.Core.Entities.Client", "Client")
                        .WithMany("LegalCases")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechAdvocacia.Core.Entities.Lawyer", "Lawyer")
                        .WithMany("LegalCases")
                        .HasForeignKey("LawyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Lawyer");
                });

            modelBuilder.Entity("TechAdvocacia.Core.Entities.Client", b =>
                {
                    b.Navigation("LegalCases");
                });

            modelBuilder.Entity("TechAdvocacia.Core.Entities.Lawyer", b =>
                {
                    b.Navigation("LegalCases");
                });

            modelBuilder.Entity("TechAdvocacia.Core.Entities.LegalCase", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
